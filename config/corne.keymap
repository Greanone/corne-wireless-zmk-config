/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        Layer3 {
            bindings = <&mo 3>;
            key-positions = <36 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp ESC  &kp Q  &kp W  &kp E         &kp R         &kp T        &kp Y  &kp U              &kp I    &kp O     &kp P   &kp BSPC
  &kp TAB  &kp A  &kp S  &kp D         &kp F         &kp G        &kp H  &kp J              &kp K    &kp L  &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V         &kp B        &kp N  &kp M          &kp COMMA  &kp DOT  &kp FSLH    &kp DEL
                         &mo 1  &kp LEFT_ALT  &kp LEFT_GUI    &kp SPACE  &mo 2  &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp N1     &kp N2     &kp N3        &kp N4        &kp N5       &kp N6        &kp N7        &kp N8        &kp N9   &kp N0  &kp BSPC
   &trans  &trans     &trans     &trans        &trans        &trans    &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SQT    &trans
&kp LSHFT  &trans  &kp SPACE  &kp SPACE     &kp TILDE        &trans       &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &trans    &trans
                                 &trans  &kp LEFT_ALT  &kp LEFT_GUI    &kp SPACE        &trans  &kp NUMBER_0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH      &kp DLLR     &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY   &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans        &trans        &trans    &kp MINUS  &kp LEFT     &kp UP_ARROW  &kp RIGHT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans        &trans        &trans    &kp EQUAL  &kp PLUS         &kp DOWN   &kp RBRC  &kp PIPE  &kp TILDE
                               &trans  &kp LEFT_ALT  &kp LEFT_GUI      &kp RET    &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp C_MUTE  &trans  &trans  &bootloader
      &trans        &trans        &trans        &trans        &trans      &trans               &trans           &trans      &trans  &trans  &trans       &trans
      &trans        &trans        &trans        &trans        &trans      &trans               &trans           &trans      &trans  &trans  &trans       &trans
                                                &trans        &trans      &trans               &trans           &trans      &trans
            >;
        };
    };
};
